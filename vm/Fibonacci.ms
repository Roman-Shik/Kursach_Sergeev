; ѕрограмма дл€ виртуальной машины Milan, удовлетвор€юща€ следующей спецификации.
; ¬ход:  целое неотрицательное число n. 
; ¬ыход: n-е число ‘ибоначчи F[n],
;        где F[0]=0, F[1]=1 и F[n]=F[n-2]+F[n-1] при каждом n>1.

; јвтор: јлександр —ергеевич √ерасимов, alexander.s.gerasimov@ya.ru

; »сходна€ Milan-программа (с той же спецификацией):
; begin
;     n:=read;
;     if n=0 then write(0)
;     else 
;         if n=1 then write(1)
;         else 
;             x:=0; y:=1; i:=2;
;             while i<=n do  /* инвариант цикла: i<=n+1 и x=F[i-2] и y=F[i-1] */
;                 z:=x+y; x:=y; y:=z;
;                 i:=i+1
;             od;            /* i=n+1 и y=F[i-1]=F[n] */
;             write(y)
;         fi
;     fi
; end

; ѕеременные: 
;  n находитс€ по адресу 99 (в пам€ти данных)
;  x - по адресу 100
;  y - по адресу 101
;  i - по адресу 102
;  z - по адресу 103
; “акие адреса переменных выбраны, чтобы адреса переменных (в пам€ти данных) 
; легко отличались от адресов команд (в пам€ти команд); хот€ в качестве 
; адресов переменных можно было бы вз€ть, например, адреса 0, 1, 2, 3 и 4, 
; совпадающие с адресами некоторых команд.
; ѕеременные можно, но необ€зательно инициализировать с помощью инструкции SET:
; SET  99 0    ; n
; SET 100 0    ; x
; SET 101 0    ; y
; SET 102 0    ; i
; SET 103 0    ; z

;  оманды программы:

 0: INPUT
 1: STORE 99   ; n:=read

; начало "if n=0"
 2: LOAD 99    ; n
 3: PUSH 0
 4: COMPARE 0  ; if n=0
 5: JUMP_NO 9  ; переход к else-блоку, соответствующему "if n=0"
 6: PUSH 0
 7: PRINT      ; write(0)
 8: JUMP 41    ; переход на команду сразу после "if n=0 then ... else ... fi"

; начало "if n=1"
 9: LOAD 99    ; n
10: PUSH 1
11: COMPARE 0  ; if n=1
12: JUMP_NO 16 ; переход к else-блоку, соответствующему "if n=1"
13: PUSH 1
14: PRINT      ; write(1)
15: JUMP 41    ; переход на команду сразу после "if n=1 then ... else ... fi"

; начало "else ..." в "if n=1 then ... else ... fi"
16: PUSH 0
17: STORE 100  ; x:=0
18: PUSH 1
19: STORE 101  ; y:=1
20: PUSH 2
21: STORE 102  ; i:=2

; начало цикла "while i<=n do ... od"
22: LOAD 102   ; i
23: LOAD 99    ; n
24: COMPARE 4  ; проверка услови€ "i<=n"
;; отладочна€ печать (сохранена лишь дл€ примера):  25:PRINT  26:STOP
25: JUMP_NO 39 ; переход на команду сразу после цикла "while i<=n do ... od"
26: LOAD 100   ; x
27: LOAD 101   ; y
28: ADD        ; x+y
29: STORE 103  ; z:=x+y
30: LOAD 101   ; y
31: STORE 100  ; x:=y
32: LOAD 103   ; z
33: STORE 101  ; y:=z
34: LOAD 102   ; i
35: PUSH 1     
36: ADD        ; i+1
37: STORE 102  ; i:=i+1
38: JUMP 22    ; переход к проверке услови€ "i<=n"
; конец цикла "while i<=n do ... od"

39: LOAD 101   ; y
40: PRINT      ; write(y)
; конец "if n=1 then ... else ... fi"

41: STOP
